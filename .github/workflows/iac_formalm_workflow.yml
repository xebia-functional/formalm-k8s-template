name: Run FormaLM analysis on IaC
defaults:
  run:
    shell: bash

on:
  pull_request:
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  check1:
    name: Check on ${{ matrix.os.runner }}
    runs-on: ${{ matrix.os }}
    container: ghcr.io/xebia-functional/formalm:cu-865cmu9cc-suggestions-in-comments
    permissions:
      contents: read  #  to fetch code (actions/checkout)
      packages: read  #  to fetch packages (docker)
      discussions: write
      pull-requests: write
    defaults:
      run:
        shell: ${{ matrix.shell }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        include:
          - os: ubuntu-latest
            shell: bash
    steps:
      - uses: actions/checkout@v2

      - name: Restore native cache
        id: cache-native
        uses: actions/cache@v3
        with:
          path: |
            scripts/build
          key: ${{ runner.os }}-native-${{ hashFiles('./scripts/*') }}

      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('/*.gradle*', '/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Setup OPENAI token
        run: echo "OPENAI_TOKEN=${{ secrets.OPENAI_TOKEN }} " >> $GITHUB_ENV
      - name: Adding Poetry to path
        run: echo "/root/.local/share/pypoetry/venv/bin" >> $GITHUB_PATH
      - name: Testing
        run: |
          poetry --version
      - name: Run FormaLM analysis
        run: >
          java -jar /home/gradle/formalm/formalm-0.0.1-SNAPSHOT.jar 
          repo-path="$GITHUB_WORKSPACE"
          output-path="/home/gradle"
          services=trivy
      - name: Show SARIF file
        run: cat /home/gradle/report.sarif
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: /home/gradle/report.sarif
      - uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const execSync = require('child_process').execSync;
            const files = execSync('find /home/gradle/reports/ -type f').toString().split('\n').filter(Boolean);

            files.forEach(file => {
              const filenameWithExtension = file.substring(file.lastIndexOf("/") + 1);
              const filename = filenameWithExtension.substring(0, filenameWithExtension.lastIndexOf("."));
              if (filename.startsWith("summary")) {
                const body = fs.readFileSync(file, 'utf8');
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: body
                });
              } else if (filename.startsWith("suggestion")) {
                const content = fs.readFileSync(file, 'utf8');
                const body = content.split("\n");
                const path = body.shift(); // side-effectful: gets path and removes line from body
                const info = filename.split("-");
                const size = info.length;
                const startLine = parseInt(info[size - 2]);
                const endLine = parseInt(info[size - 1]);
                
                console.log("------DEBUG------");
                console.log(`path ${path}`);
                console.log(`start ${startLine}`);
                console.log(`end ${endLine}`);
                console.log("-----------------");
                
                github.rest.pulls.createReviewComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.issue.number,
                  body: body.join("\n"),
                  commit_id: context.payload.pull_request.head.sha,
                  path: `kubernetes/configs/${path}`,
                  side: "RIGHT",
                  start_line: startLine,
                  start_side: "RIGHT",
                  line: endLine
                });
              } else {
                console.log(`Unexpected file ${filename}`);
              }
            });
